# This file contains pin mappings for the stock 2021 Creality Ender 3
# S1. To use this config, check the STM32 Chip on the V2.4S1 Board
# then during "make menuconfig" select either the STM32F103 with a
# "28KiB bootloader" or select the STM32F401 with a "64KiB bootloader"
# and serial (on USB PA10/PA9) communication for both depending on the
# STM32 Chip installed on your printers Motherboard.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# Serial (on USART2 PA3/PA2), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must changed to "firmware.bin"

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA5
position_endstop: -10
position_max: 252.5
position_min: -15
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA6
position_endstop: 0
position_max: 233
position_min: -10
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 270
position_min: -4

[extruder]
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.6081
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 23.561
#pid_Ki: 1.208
#pid_Kd: 114.859
min_temp: 0
max_temp: 250
pressure_advance= 0.21745

[heater_bed]
heater_pin: PA7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 71.867
#pid_Ki: 1.536
#pid_Kd: 840.843
min_temp: 0
max_temp: 110

[heater_fan hotend_fan]
pin: PC0

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 5
max_z_accel: 100

[bltouch]
sensor_pin: ^PC14
control_pin: PC13
x_offset: -32
y_offset: -41
#z_offset: 0
probe_with_touch_mode: true
stow_on_each_sample: false
samples: 3


[bed_mesh]
speed: 120
mesh_min: 10, 10
mesh_max: 193, 190
probe_count: 4,4
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2

[safe_z_home]
home_xy_position: 147, 154
speed: 75
z_hop: 5
z_hop_speed: 5
move_to_previous: true

[screws_tilt_adjust]
screw1: 50,60
screw1_name: front left screw
screw2: 230,60
screw2_name: front right screw
screw3: 230,222
screw3_name: rear right screw
screw4: 50,222
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[input_shaper]
shaper_freq_x = 36.0  # frequency for the X mark of the test model
shaper_freq_y = 60.3  # frequency for the Y mark of the test model
shaper_type: ei
damping_ratio_x: 0.1
damping_ratio_y: 0.1

[filament_switch_sensor e0_sensor]
switch_pin: !PC15
pause_on_runout: true
runout_gcode: PAUSE
insert_gcode: RESUME

[pause_resume]
recover_velocity: 25

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 35
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 35
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro SCREW_ADJUST]
gcode:
  SCREWS_TILT_CALCULATE

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
    # Use absolute coordinates
    G90
    # Extruder relative mode
    M83
    # Start bed heating
    M140 S{BED_TEMP}
    # Start nozzle heating
    M104 S{EXTRUDER_TEMP}
    # Allow partial nozzle heat up
    G4 S10
    # Allow bed to stabilise
    M190 S{BED_TEMP}
    # Reset Gcode Offset
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Call bed mesh
    BED_MESH_PROFILE LOAD=default
    # Move nozzle to front left corner
    G1 Z50 F240
    G1 X2 Y10 F3000
    # Wait for heating
    M104 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}
    # Priming move
    G1 Z0.28 F240
    G92 E0
    G1 Y140 E10 F1500
    G1 X2.3 F5000
    G92 E0
    G1 Y10 E10 F1200
    G92 E0

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Present print
    G1 X5 Y220 F3000
    # Disable steppers
    M84
    # Turn off printer
    POWER_OFF_PRINTER

[gcode_macro POWER_OFF_PRINTER]
gcode:
    {action_call_remote_method("set_device_power",
                                device="printer_plug",
                                state="off")}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.684
#*# pid_ki = 1.361
#*# pid_kd = 103.025
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.221
#*# pid_ki = 2.086
#*# pid_kd = 642.516
#*#
#*# [bltouch]
#*# z_offset = 1.887
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.267500, 0.144167, 0.054167, 0.084167
#*# 	  0.119167, 0.009167, -0.043333, -0.036667
#*# 	  0.079167, 0.010000, 0.021667, 0.050000
#*# 	  0.240000, 0.138333, 0.115000, 0.141667
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 4
#*# max_y = 190.0
#*# mesh_x_pps = 2
#*# max_x = 193.0
